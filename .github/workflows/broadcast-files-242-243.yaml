---
name: Broadcast files. Issues 242-243
on:
  workflow_dispatch:
    inputs:
      repos:
        description: |
          Target repositorys names. Comma-separated
          If not provided, the action will be triggered for all repositories in the organization.
        required: false
        type: string
      replicate-license:
        description: 'Replicate LICENSE'
        required: false
        default: false
        type: boolean
      replicate-cla:
        description: 'Replicate CLA'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  pull-requests: write
  statuses: read
jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup_matrix.outputs.matrix }}
    steps:
      - id: setup_matrix
        run: |
          if [[ "${{ inputs.repos }}" != "" ]]; then
            CSV_STRING="${{ inputs.repos }}"
            JSON_MATRIX=$(jq -c -n --arg in_str "$CSV_STRING" '$in_str | split(",")')
            echo "matrix={\"item\":$JSON_MATRIX}"
            echo "matrix={\"item\":$JSON_MATRIX}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"item\":[\"\"]}"
            echo "matrix={\"item\":[\"\"]}" >> $GITHUB_OUTPUT
          fi

  replicate-license:
    needs: setup_matrix
    name: Replicating license
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_matrix.outputs.matrix) }}
    if: ${{ inputs.replicate-license }}
    uses: netcracker/.github/.github/workflows/reusable-broadcast-files.yaml@main
    with:
      replicate-license: ${{ inputs.replicate-license }}
      repo_name: "${{ matrix.item }}"
    secrets:
      token: '${{ secrets.GH_ACCESS_TOKEN }}'
  replicate-cla:
    needs: setup_matrix
    name: Replicating CLA
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix: ${{ fromJson(needs.setup_matrix.outputs.matrix) }}
    if: ${{ inputs.replicate-cla }}
    uses: netcracker/.github/.github/workflows/reusable-broadcast-files.yaml@main
    with:
      replicate-cla: ${{ inputs.replicate-cla }}
      repo_name: "${{ matrix.item }}"
    secrets:
      token: '${{ secrets.GH_ACCESS_TOKEN }}'
